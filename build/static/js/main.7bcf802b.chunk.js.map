{"version":3,"sources":["Components/Signup.js","Containers/Category.js","Components/Task.js","Components/TaskForm.js","Containers/TaskContainer.js","Todo.js","Components/Login.js","Components/CategoryForm.js","Components/NavBar.js","App.js","index.js"],"names":["Signup","state","username","password","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","props","Form","className","onSubmit","this","FormGroup","error","Input","invalid","type","placeholder","onChange","FormFeedback","Button","color","React","Component","Category","categories","fetchUser","token","localStorage","getItem","fetch","method","headers","Authorization","then","response","json","data","user","sort","a","b","id","mounted","renderCategory","map","categoryObj","index","selectedState","onClick","selectedCategory","key","Task","category","text","task","deleteTask","TaskFormm","categoryArray","fetchCategories","inputTask","user_id","addTask","selectCategory","slice","defaultValue","disabled","TaskContainer","TaskForm","tasks","taskObj","Todo","filterTasks","filter","select","innerText","body","JSON","stringify","obj","newArr","history","push","Login","to","CategoryForm","editCategory","options","categoryMap","Label","style","NavBar","Navbar","expand","Nav","pills","NavItem","clickHandler","Badge","NavLink","tag","RRNavLink","activeClassName","exact","path","App","undefined","signupHandler","userObj","accepts","loginHandler","jwt","setItem","message","logoutHandler","removeItem","component","render","withRouter","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7bcf802b.chunk.js","sourcesContent":["import React from 'react' \nimport '../App.css'\nimport { Form, FormGroup, Input, Button, FormFeedback  } from 'reactstrap'\n\nclass Signup extends React.Component {\n    state = {\n        username: \"\",\n        password: \"\"\n    }\n\n    changeHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault() \n        this.props.submitHandler(this.state)\n    }\n\n    render() {\n        return(\n          <>\n          <br></br>\n            <Form className=\"login-form\" onSubmit={this.submitHandler} >\n            <h1 className='text-center'>Create an Account</h1>\n            <FormGroup>\n            {this.props.error === 'Please enter a different username' ? <><Input invalid type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={this.changeHandler} /> <FormFeedback>Sorry! That name is already taken</FormFeedback></>: \n            <Input type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={this.changeHandler} />} \n            </FormGroup>\n            <FormGroup>\n              <Input  type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.changeHandler}/>\n            </FormGroup>\n            <br></br>\n            <div className='buttons-form'>\n            <Button color='success' type=\"submit\" value=\"Sign Up\" >Sign Up</Button>\n            </div>\n          </Form>\n          </>\n        )\n    }\n}\n\nexport default Signup ","import React from 'react'\n\n\nclass Category extends React.Component {\n    state = {\n        categories: []\n    }\n\n    componentDidMount() {\n        this.mounted = true \n        if (this.mounted === true) {\n            this.fetchUser()\n        }\n    }\n\n    fetchUser = () => {\n        let token = localStorage.getItem(\"token\")\n        fetch('http://localhost:3000/api/v1/profile', {\n          method: \"GET\",\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then(response => response.json())\n        .then(data => {\n            this.setState({categories: data.user.categories.sort((a, b) => a.id - b.id)})\n        })\n    }\n\n    componentWillUnmount() {\n        this.mounted = false \n    }\n\n    render() {\n       let renderCategory = this.state.categories.map((categoryObj, index) => <button className={this.props.selectedState === categoryObj.name ? \"selected\" : null} onClick={(e)=> this.props.selectedCategory(e)}  key={index}> {categoryObj.name} </button>)\n        return(\n            <div className=\"categories\" >\n          <h5>Category Filters</h5>  \n            {renderCategory}\n        </div>\n\n        )\n    }\n}\n\nexport default Category","import React from 'react'\n\n\nclass Task extends React.Component {\n    render() {\n        return(\n            <div className=\"task\">\n                <div className=\"label\">\n                    {this.props.category}\n                </div>\n                <div className=\"text\">\n                    {this.props.text}\n                </div>\n                <button className=\"delete\"  onClick={(task)=> this.props.deleteTask(this.props.task)}>\n                    X\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default Task ","import React from 'react'\n\nclass TaskFormm extends React.Component {\n    \n    state = {\n        task: '',\n        categoryArray: [],\n        category: '',\n        user: []\n    }\n\n\n    componentDidMount() {\n        this.mounted = true \n        if (this.mounted === true) {\n            this.fetchCategories()\n        }\n    }\n\n\n    componentWillUnmount() {\n        this.mounted = false \n    }\n\n    fetchCategories = () => {\n        let token = localStorage.getItem(\"token\")\n        fetch('http://localhost:3000/api/v1/profile', {\n          method: \"GET\",\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then(response => response.json())\n        .then(data => {\n            this.setState({user: data.user, categoryArray: data.user.categories.sort((a, b) => a.id - b.id)})\n        })\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault()\n        let inputTask = {\n            text: this.state.task,\n            category: this.state.category,\n            user_id: this.state.user.id\n        }\n         this.props.addTask(inputTask)\n    }\n\n    changeHandler = (e, map) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    selectCategory = () => {\n        let origArr = this.state.categoryArray.map((categoryObj) => categoryObj.name).slice(1,5)\n        return origArr.map((category, index) => <option key={index} value={category}>{category}</option>).slice(0, 4)\n    }\n    render() {\n        return(\n            <form className=\"new-task-form\" onSubmit={e => this.submitHandler(e)}>\n                <input onChange={e => this.changeHandler(e)} name=\"task\" value={this.state.task} placeholder=\"Enter a New Task\" type=\"text\" />\n                <select  onChange={e => this.changeHandler(e)} name=\"category\" defaultValue='first' >\n                    <option value='first' disabled>Category</option>\n                    {this.selectCategory()}\n                    </select>\n                    <input type=\"submit\" />\n            </form>\n        )\n    }\n}\n\nexport default TaskFormm","import React from 'react'\nimport Task from '../Components/Task'\nimport TaskForm from '../Components/TaskForm'\n\nconst TaskContainer = (props) => {\n    \n    const renderTask = () => {\n        \n        return props.tasks.map((taskObj, index) =>  <Task key={index} task={taskObj} category={taskObj.category} text={taskObj.text} deleteTask={props.deleteTask}/>)\n    }\n    \n    return (\n        <div className =\"tasks\" >\n            <h5>Tasks</h5>\n            <TaskForm addTask={props.addTask} />   \n            {renderTask()}\n        </div>\n        ) \n        \n}\n\nexport default TaskContainer","import React from 'react'\nimport './App.css'\nimport Category from './Containers/Category'\nimport TaskContainer from './Containers/TaskContainer'\n\n\nclass Todo extends React.Component {\n\n  state = {\n    selectedCategory: \"All\", \n    tasks: [],\n    user: false\n  }\n\n  componentDidMount() {\n    this.mounted = true \n    if (this.mounted === true) {\n      let mounted = true\n    if (mounted === true) {\n\n      let token = localStorage.getItem(\"token\")\n      if (token !== null || undefined) {\n        fetch('http://localhost:3000/api/v1/profile', {\n          method: \"GET\",\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then(response => response.json())\n        .then(data => this.setState({user: data.user, tasks: data.user.tasks}), ()=> this.props.history.push(\"/\"))\n      } else {\n        this.props.history.push(\"/login\")\n      }\n    }\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false \n  }\n\n\n  filterTasks = () => {\n    if (this.state.selectedCategory === 'All') {\n      return this.state.tasks\n    }else {\n      return this.state.tasks.filter(taskObj => taskObj.category === this.state.selectedCategory)\n    }\n  }\n\n  selectedCategory = (e) => {\n    let select = e.target.innerText\n    this.setState({selectedCategory: select })\n  }\n\n  addTask = (taskObj) => {\n    fetch('http://localhost:3000/tasks', {\n\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify(taskObj)\n    })\n    .then(response => response.json())\n    .then(tasks => this.setState( {tasks: [...this.state.tasks, tasks] }))\n    }\n  \n\n\n  deleteTask = (obj) => {\n    let newArr = this.state.tasks.filter(task => !(task.text === obj.text && task.category === obj.category))\n    this.setState({tasks: newArr})\n    fetch(`http://localhost:3000/tasks/${obj.id}`, {\n\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify(obj)\n    })\n    }\n  \n  \n  render() {\n    \n    return (\n      \n      <div className=\"App\">\n        <br></br>\n        \n        <Category user={this.state.user} selectedState ={this.state.selectedCategory} selectedCategory ={this.selectedCategory} />    \n        <TaskContainer user={this.state.user} addTask={this.addTask}  deleteTask={this.deleteTask} category={this.state.selectedCategory}  tasks={this.filterTasks()} /> \n    </div> \n     \n     \n    )\n  }\n}\n\n\nexport default Todo","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport { Form, FormGroup, Input, Button, FormFeedback  } from 'reactstrap'\nimport '../App.css'\n\n\nclass Login extends React.Component {\n\n  state = {\n    username: \"\",\n    password: \"\"\n}\n\nchangeHandler = (e) => {\n  this.setState({ [e.target.name]: e.target.value })\n}\n\nsubmitHandler = (e) => {\n  e.preventDefault() \n  this.props.submitHandler(this.state)\n}\n\n  render() {\n   \n    return (\n      <>\n      <br></br>\n\n      <Form className=\"login-form\" onSubmit={this.submitHandler} >\n        <h2 className='text-center'>Community ToDo List</h2>\n        <FormGroup>\n          {this.props.error === 'Invalid username or password' ? <><Input invalid type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={this.changeHandler} /> <FormFeedback>Incorrect Username or Password.</FormFeedback></>:\n          <><Input type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={this.changeHandler} /></> }\n        </FormGroup>\n        <FormGroup>\n        {this.props.error === 'Invalid username or password' ? <><Input invalid type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.changeHandler} /> <FormFeedback>Incorrect Username or Password.</FormFeedback></>:\n        <Input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.changeHandler} />}\n        </FormGroup>\n        <br></br>\n        <div className='buttons-form'>\n        <Button color='primary' type=\"submit\" value=\"Login\" >Login</Button>\n      <NavLink to=\"/signup\">\n      <Button color='warning' >\n        Register\n      </Button>\n      </NavLink>\n        </div>\n      </Form>\n      \n      </>\n    )\n  }\n}\n \nexport default Login","import React from 'react'\nimport { Form, FormGroup, Input, Button, Label  } from 'reactstrap'\n\n \nclass CategoryForm extends React.Component {\n\n    state = {\n        categories: [],\n        id: '',\n        name: '',\n        user: [],\n        task: []\n    }\n\n    changeHandler = (e) => {\n        this.setState({ name: e.target.value})\n    }\n\n    editCategory = (obj) => { \n        let id = (obj.id) \n        let name = obj.name\n        let user = obj.user\n        this.setState({\n            id: id,\n             name: name,\n             user: user\n            })\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault()\n        let id = this.state.id\n        let name = this.state.name\n        const options = {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            },\n            body: JSON.stringify({name: name})\n        }\n        fetch(`http://localhost:3000/categories/${id}`, options)\n        .then(()=> this.fetchCategories())\n    }\n\n    fetchCategories = () => {\n        let token = localStorage.getItem(\"token\")\n        fetch('http://localhost:3000/api/v1/profile', {\n          method: \"GET\",\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then(response => response.json())\n        .then(data => {\n            this.setState({categories: data.user.categories.sort((a, b) => a.id - b.id)})\n        })\n    }\n\n\n\n    componentDidMount() {\n        this.fetchCategories()\n    }\n\n    categoryMap = () => {\n        return this.state.categories.map((category) => <span className='category-span' key={category.id} value={category.name} onClick={()=> this.editCategory(category)} name=\"category\">{category.name}</span> ).slice(1,5)\n    }\n\n    render() {\n       \n    return( \n        <>\n\n        <br></br>\n        <br></br>\n        <br></br>\n      \n    <div className='text-center'>\n        {this.categoryMap()}\n    </div>\n\n    <br></br>\n    <Form className='category-form' onSubmit={this.submitHandler}>\n        <FormGroup>\n        <Input value={this.state.name} onChange = {(this.changeHandler)} placeholder=\"Selected Category\" name=\"category\" /> \n        <div className='text-center'>\n        <Label style={{color: 'rgb(2, 16, 139)'}}>Click on a Category to Begin Editing</Label>\n        </div>\n        </FormGroup>\n        <div className='text-center'>\n            <br></br>\n        <Button  type=\"submit\">Submit Changes</Button>\n        </div>\n    </Form>\n        </>\n\n    )\n  }\n}\n \nexport default CategoryForm","import React from 'react'\nimport { NavLink as RRNavLink } from 'react-router-dom'\nimport { Navbar, Nav, NavItem, NavLink, Badge} from 'reactstrap'\nimport '../App.css' \n\n  class NavBar extends React.Component {\n    render() {\n      return (\n        <div>\n          <Navbar expand=\"md\">\n          <Nav pills  >\n            <div className='logout'>\n            <NavItem onClick={this.props.clickHandler}><h6><Badge color='danger'><NavLink style={{color: 'white'}}>Logout</NavLink></Badge></h6>\n          </NavItem>\n          </div>\n          <br></br>\n        <NavItem >\n          <NavLink \n          tag={RRNavLink} className=\"nav-link\" to=\"/\" activeClassName=\"active\" exact path=\"/\"\n          >My Tasks</NavLink>\n          </NavItem>\n          \n          <NavItem >\n          <NavLink \n           tag={RRNavLink} className=\"nav-link\" to=\"/edit\" activeClassName=\"active\" exact path=\"/edit\"\n          >Change Categories</NavLink>\n          </NavItem>\n          </Nav>\n          </Navbar>\n        </div>\n     \n      )\n    }\n  }\n   \n  export default NavBar\n","import React from 'react'\nimport './App.css'\nimport Signup from './Components/Signup'\nimport Todo from './Todo'\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport Login from './Components/Login'\nimport CategoryForm from './Components/CategoryForm'\nimport Navbar from './Components/NavBar'\n\n\nclass App extends React.Component {\n\n  state= {\n    user: undefined,\n    error: ''\n  }\n\n  componentDidMount() {\n    let mounted = true \n    if (mounted === true) {\n\n      let token = localStorage.getItem(\"token\")\n      if (token !== null || undefined) {\n        fetch('http://localhost:3000/api/v1/profile', {\n          method: \"GET\",\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then(response => response.json())\n        .then(data => this.setState({user: data.user}), ()=> this.props.history.push(\"/\"))\n      } else {\n        this.props.history.push(\"/login\")\n      }\n    }\n}\n\ncomponentWillUnmount() {\n  this.mounted = false \n}\n\n  signupHandler = (userObj) => {\n    fetch('http://localhost:3000/api/v1/users', {\n      method: 'POST',\n      headers: {\n        accepts: \"application/json\", \n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({ user: userObj })\n    })\n    .then(response => response.json())\n    .then(data =>{\n      if(data.error === 'failed to create user') {\n        this.setState({error: 'Please enter a different username' })\n      } else {\n        this.setState({error: '' })\n        this.props.history.push(\"/login\")\n      }\n    })\n  }\n\n  loginHandler = (userObj) => {\n    fetch('http://localhost:3000/api/v1/login', {\n      method: 'POST',\n      headers: {\n        accepts: 'application/json',\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({ user: userObj})\n    })\n    .then(response => response.json())\n    .then(data => {\n      if (data.jwt !== undefined) {\n        localStorage.setItem(\"token\", data.jwt)\n        this.setState({user: data.user, error: ''}, ()=> this.props.history.push(\"/\"))\n      }else if(data.message === 'Invalid username or password'){\n        this.setState({error: 'Invalid username or password'})\n      }\n    })\n  }\n\n  logoutHandler = () => {\n    localStorage.removeItem('token')\n    this.props.history.push(\"/login\")\n    this.setState({ user: false})\n  }\n\n  render() {    \n    return (\n      <Switch>\n        {this.state.user \n        ?\n        <>\n        <br></br>\n        <Navbar clickHandler={this.logoutHandler} user={this.state.user} />\n        <br></br>\n        \n        <Route exact path=\"/\" component={Todo} />\n        <Route exact path='/edit' render={() => <CategoryForm />} />\n        </>\n        :\n        <>\n        <Route exact path='/signup' render={() => <Signup error ={this.state.error} submitHandler={this.signupHandler}/>} />\n        <Route exact path='/login' render={() => <Login error={this.state.error} submitHandler={this.loginHandler}/>} />\n        </>\n      }\n        </Switch>\n    )\n  }\n}\n\nexport default withRouter(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render((\n    <Router>\n       <App />\n    </Router>),\n    document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}